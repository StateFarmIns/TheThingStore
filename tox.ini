[tox]
envlist = py{310,311}, flake8, bandit, black-check, mypy
isolated_build = true
usedevelop=true

[testenv]
allowlist_externals =
    pytest
    cp
    rm
extras =
    dev
    shapes
    models

setenv =
    PY_IGNORE_IMPORTMISMATCH = 1

commands =
    pytest \
        --html=pytest-report.html \
        --cov=thethingstore \
        --cov-append \
        --cov-branch \
        --cov-report=term-missing \
        --cov-report html:htmlcov {posargs:-vv} {toxinidir}

parallel_show_output = true

[testenv:badge]
deps = 
    anybadge>=1.9.0,<2
skip_install = true
commands = 
        anybadge --label=python --value="3.9" --file=pythonsupported.svg --color="#1081c1" -o

[testenv:flake8]
allowlist_externals =
    flake8
    mkdir
    cp
    rm
commands =
    mkdir -p flake8
    flake8 \
    --format html \
    --htmldir flake8
parallel=true

[testenv:black-check]
allowlist_externals = black
commands =
    black --check .
parallel=true

[testenv:bandit]
allowlist_externals =
    bandit
commands=
    bandit -r src -f html -o bandit-report.html -n5 -x tests
    bandit -r tests -s B101 -n5
parallel=true

[testenv:mypy]
allowlist_externals =
    mypy
    cp
skip_install=false
deps =
    cp
    mypy
    lxml
commands =
    mypy --ignore-missing-imports \
    --disallow-untyped-defs \
    --check-untyped-defs \
    --html-report mypy-report \
    --txt-report mypy-report \
    --install-types --non-interactive \
    src/thethingstore

[pytest]
testpaths =
    tests
    src/thethingstore
deps =
    pytest
norecursedirs =
    .git
    *.egg
    build
    dist
addopts = --doctest-modules -p no:warnings

[flake8]
exclude = .tox, .git
max-line-length = 120
# extend-ignore = B101
# per-file-ignore =
#     dirglob:comma,sep,list,of,error
docstring-convention = numpy
format = html
htmldir = flake8-report
max-complexity = 10
# enable-extensions =
#     anyotheraddonsinthepyproject.toml

[coverage:run]
branch=true
source=src/thethingstore
disable_warnings=module-not-measured

[coverage:report]
fail_under=82
precision=2
show_missing=true
skip_covered=false
sort=miss
exclude_lines =
    pragma: no cover
    except ImportError
    except NameError
    if __name__ == .__main__.:

[coverage:paths]
source =
    src
